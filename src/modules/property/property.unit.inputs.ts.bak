import { Field, InputType, Int, Float } from "type-graphql";
import { UnitType } from "./property.types";

@InputType()
export class CreatePropertyUnitInput {
  @Field()
  unitNumber: string;

  @Field(() => UnitType)
  unitType: UnitType;

  @Field(() => Float)
  amount: number;

  @Field(() => Int)
  bedrooms: number;

  @Field(() => Int)
  bathrooms: number;

  @Field(() => Float, { nullable: true })
  sqft?: number;

  @Field(() => Boolean, { defaultValue: false })
  isFurnished: boolean;

  @Field(() => [String])
  amenities: string[];

  @Field(() => [String], { nullable: true })
  images?: string[];
}

@InputType()
export class UpdatePropertyUnitInput {
  @Field({ nullable: true })
  unitNumber?: string;

  @Field(() => UnitType, { nullable: true })
  unitType?: UnitType;

  @Field(() => Float, { nullable: true })
  amount?: number;

  @Field(() => Int, { nullable: true })
  bedrooms?: number;

  @Field(() => Int, { nullable: true })
  bathrooms?: number;

  @Field(() => Float, { nullable: true })
  sqft?: number;

  @Field(() => Boolean, { nullable: true })
  isFurnished?: boolean;

  @Field(() => [String], { nullable: true })
  amenities?: string[];

  @Field(() => [String], { nullable: true })
  images?: string[];

  @Field(() => Boolean, { nullable: true })
  isAvailable?: boolean;
}
